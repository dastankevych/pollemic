events {
    worker_connections 1024;
}
http {
  # Resolver configuration to refresh DNS cache more frequently
  resolver 127.0.0.11 valid=10s;
  
  upstream backend {
    zone upstream_backend 64k;
    server api:8000 resolve;
  }
  upstream frontend {
    server frontend:3000;
  }
  server {
    listen 80;
    server_name localhost;
    # General headers for all locations
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Frontend routes (default)
    location / {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
    }
    # Next.js API routes
    location /_next/ {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
    }
    # Backend routes
    location /questionnaires {
      proxy_pass http://backend;
    }
    location /groups {
      proxy_pass http://backend;
    }
    location /schedules {
      proxy_pass http://backend;
    }
    # Swagger UI and OpenAPI schema
    location /openapi.json {
        proxy_pass http://backend/openapi.json;
    }
    location /docs {
      proxy_pass http://backend/docs;
    }
    # Add location for Swagger UI static resources
    location /docs/swagger-ui-bundle.js {
      proxy_pass http://backend/docs/swagger-ui-bundle.js;
    }
    location /docs/swagger-ui-standalone-preset.js {
      proxy_pass http://backend/docs/swagger-ui-standalone-preset.js;
    }
    location /docs/swagger-ui.css {
      proxy_pass http://backend/docs/swagger-ui.css;
    }
    location /docs/oauth2-redirect.html {
      proxy_pass http://backend/docs/oauth2-redirect.html;
    }
    location /docs/favicon-32x32.png {
      proxy_pass http://backend/docs/favicon-32x32.png;
    }
    location /docs/favicon-16x16.png {
      proxy_pass http://backend/docs/favicon-16x16.png;
    }
    location /redoc {
      proxy_pass http://backend/redoc;
    }
    location /webhook {
      proxy_pass http://backend/webhook;
    }
    
    # General API endpoint to catch all other API requests
    location /api/ {
      proxy_pass http://backend/;
    }
  }
}